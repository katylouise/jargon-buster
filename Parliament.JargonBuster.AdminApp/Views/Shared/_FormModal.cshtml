@model AdminApp.ViewModels.DefinitionViewModel
@{ 
    var ActionName = ViewContext.RouteData.Values["action"].ToString();

    List<SelectListItem> houseItems = new List<SelectListItem>();

    houseItems.Add(new SelectListItem { Text = "Bicameral", Value = "Bicameral", Selected = true });

    houseItems.Add(new SelectListItem { Text = "Commons", Value = "Commons" });

    houseItems.Add(new SelectListItem { Text = "Lords", Value = "Lords" });
}

<div class="overlay">
        <div id="#formModal" class="modal">
            @using (Html.BeginForm(ActionName, "Home", FormMethod.Post, new { @class = "edit-form" }))
            {
                @Html.HiddenFor(m => m.Id)

                <div class="edit-wrapper">
                    <h3 class="edit-title">Add/Edit Definition </h3>

                    @Html.TextBoxFor(m => m.Phrase, new { @class = "edit-term" })
                    @Html.ValidationMessageFor(m => m.Phrase)


                    @Html.TextAreaFor(m => m.Definition, new { @class = "edit-definition", @rows = "10" })
                    @Html.ValidationMessageFor(m => m.Definition)

                    <div class="edit-alternatives">
                        @if (Model != null && Model.Alternates.Any())
                        {
                            <ul class="edit-alternatives__list">
                                @for (var i = 0; i < Model.Alternates.Count(); i++)
                                {
                                    @Html.HiddenFor(m => m.Alternates[i].Id)
                                    <li id=@i>@Html.TextBoxFor(m => m.Alternates[i].AlternateDefinition, new { @class = "edit-alternatives__term" })</li>
                                }
                            </ul>
                        }
                        else if (Model != null && Model.Alternates.Count == 0)
                        {
                            <ul class="edit-alternatives__list"></ul>
                        }
                        else
                        {
                            <ul class="edit-alternatives__list">
                                <li id="0">@Html.TextBoxFor(m => m.Alternates[0].AlternateDefinition, new { @class = "edit-alternatives__term" })</li>
                            </ul>
                        }

                        <a class="edit-alternatives__add" href="#">Add alternative term</a>
                     </div>

                    @Html.DropDownListFor(m => m.House, new SelectList(houseItems, "Value", "Text"), new { @class = "edit-group" })

                </div>
                <div class="edit-submit cf">
                    <button class="edit-submit__save">Save</button>
                    <a href="#" class="edit-submit__cancel">Cancel</a>
                </div>
            }
        </div>
    </div>


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/admin-app")