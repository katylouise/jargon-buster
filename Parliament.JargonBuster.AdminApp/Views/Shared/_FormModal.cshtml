@model AdminApp.ViewModels.DefinitionViewModel
@{ 
    var ActionName = ViewContext.RouteData.Values["action"].ToString();
}

@using (Html.BeginForm(ActionName, "Home", FormMethod.Post))
{
    @Html.HiddenFor(m => m.Id)

    @Html.TextBoxFor(m => m.Phrase)
    @Html.ValidationMessageFor(m => m.Phrase)

    @Html.TextBoxFor(m => m.Definition)
    @Html.ValidationMessageFor(m => m.Definition)

    @Html.LabelFor(m => m.House, "Bicameral")
    @Html.RadioButtonFor(m => m.House, "Bicameral")
    @Html.LabelFor(m => m.House, "Commons")
    @Html.RadioButtonFor(m => m.House, "Commons")
    @Html.LabelFor(m => m.House, "Lords")
    @Html.RadioButtonFor(m => m.House, "Lords")

    if (Model != null && Model.Alternates.Any())
    {
        <ul class="alternatesList">
            @for(var i = 0; i < Model.Alternates.Count(); i++)
            {
                @Html.HiddenFor(m => m.Alternates[i].Id)
                <li id=@i>@Html.TextBoxFor(m => m.Alternates[i].AlternateDefinition)</li>
            }
        </ul>
    }
    else if (Model != null && Model.Alternates.Count == 0)
    {
        <ul class="alternatesList"></ul>
    }
    else
    {
        <ul class="alternatesList">
            <li id="0">@Html.TextBoxFor(m => m.Alternates[0].AlternateDefinition)</li>
        </ul>
    }
    <a class="addAlternate" href="#">Add a new alternate</a>
    <button type="submit">Save</button>
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/admin-app")